config_type: "prediction" # options: data_preprocessor, prediction, evaluation

# Input Settings:
  ## initialize base input folder name
  ## provide path to dataset folder
input_settings:
  # Base input directory
  input_dir: "input/data/coronaviridae/splits"

  # Name of file(s) in subdirectory to be read and processed.
  # Two forms of inputs:
  # Example: With pre split input files [NOTE: classification_settings.split_input MUST be set to False]
  #  file_names:
  #    - dir: "<dir_1>"
  #      train: ["train_file_1_1.csv", "train_file_1_2.csv", "train_file_1_3.csv"]
  #      test: ["test_file_1_1.csv", "test_file_1_2.csv", "test_file_1_3.csv"]
  #
  #    - dir: "<dir_2>"
  #      train: ["train_file_2_1.csv", "train_file_2_2.csv"]
  #      test: ["test_file_2_1.csv", "test_file_2_2.csv"]
  #
  # Example: Without presplit input files
  # file_names: ["file_1.csv", "file_2.csv", "file_3.csv"]
  file_names:
    - dir: "s12612648"
      train: [ "coronaviridae_final.csv_tr0.8_train.csv" ]
      test: [ "coronaviridae_final.csv_tr0.8_test.csv" ]

    - dir: "s31062180"
      train: [ "coronaviridae_final.csv_tr0.8_train.csv" ]
      test: [ "coronaviridae_final.csv_tr0.8_test.csv" ]

    - dir: "s48918293"
      train: [ "coronaviridae_final.csv_tr0.8_train.csv" ]
      test: [ "coronaviridae_final.csv_tr0.8_test.csv" ]

    - dir: "s55631155"
      train: [ "coronaviridae_final.csv_tr0.8_train.csv" ]
      test: [ "coronaviridae_final.csv_tr0.8_test.csv" ]

    - dir: "s79221635"
      train: [ "coronaviridae_final.csv_tr0.8_train.csv" ]
      test: [ "coronaviridae_final.csv_tr0.8_test.csv" ]


classification_settings:
  model_type: "nlp"
  n_iterations: 5
  split_input: False
  sequence_settings:
    batch_size: 32
    sequence_col: "seq"
    max_sequence_length: 1453 # max=1453
    truncate: False
    pad_sequence_val: 0
  label_settings:
    label_col: "binary_label"
    exclude_labels: [ "nan"]
    label_groupings:
      "Human": [ "Human" ]
      "Not Human": [ "Not Human" ]
  models:
    - name: "transformer-crossentropy"
      active: False
      mode: train # supported values: train, test
      pretrained_model_path: #"output/raw/uniref90/20230407/host_multi/trained_transformer_model.pth" # mandatory if the mode is set to test
      loss: "CrossEntropyLoss"
      with_convolution: False # ensure that truncate is set to True in sequence_settings if convolution is not being used
      n_heads: 8
      depth: 6
      n_tokens: 27
      n_classes: 2
      n_epochs: 10
      dim: 512

    - name: "transformer-conv1d-crossentropy"
      active: True
      mode: train # supported values: train, test
      pretrained_model_path: #"output/raw/uniref90/20230407/host_multi/trained_transformer_model.pth" # mandatory if the mode is set to test
      loss: "CrossEntropyLoss"
      with_convolution: True # ensure that truncate is set to False in sequence_settings if convolution is being used
      kernel_size: 3
      stride: 1
      padding: 0
      n_heads: 8
      depth: 6
      n_tokens: 27
      n_classes: 2
      n_epochs: 10
      dim: 512

output_settings:
  output_dir: "output"
  results_dir: "raw"
  visualizations_dir: "visualization"
  sub_dir: "coronaviridae/20230503/host_binary"
  prefix: "tf-cnv-ce-k3s1-d512" # default: none; default file name = kmer_k<k>_lr_c<c>_<label>_<type>_tr<train_proportion>_n<n_iterations>_<output_prefix>_output.csv
